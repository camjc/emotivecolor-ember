<div class="threevis"></div>

<script>
var camera, scene, renderer,
    geometry, material, mesh, controls,
    container = $('.threevis');

function init() {
    scene = new THREE.Scene();

    camera = new THREE.PerspectiveCamera(20, 1280 / 720, 1, 10000);
    camera.position.z = 700;

    if (window.WebGLRenderingContext) {
        renderer = new THREE.WebGLRenderer({ antialias: true });
    } else {
        renderer = new THREE.CanvasRenderer();
    }
    renderer.setSize(1280, 720);
    renderer.setClearColor(0xD1D1D1, 1);

    controls = new THREE.OrbitControls(camera, renderer.domElement);

    container.append(renderer.domElement);
}

function render() {
    renderer.render(scene, camera);
    controls.update();
}

function animate() {
    // note: three.js includes requestAnimationFrame shim
    requestAnimationFrame(animate);
    render();
}

init();
animate();

</script>

{{#each model}}
    <script>
        geometry{{unbound id}} = new THREE.SphereGeometry( 5, 8, 8 );
        material{{unbound id}} = new THREE.MeshBasicMaterial( { color: 0x{{unbound hex}} } );

        mesh{{unbound id}} = new THREE.Mesh( geometry{{unbound id}}, material{{unbound id}} );
        
        mesh{{unbound id}}.position.x = {{unbound radial3X}};
        mesh{{unbound id}}.position.y = {{unbound radial3Y}};
        mesh{{unbound id}}.position.z = {{unbound l}} * 2;

        scene.add( mesh{{unbound id}} );
    </script>
{{/each}}